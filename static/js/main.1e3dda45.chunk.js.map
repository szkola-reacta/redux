{"version":3,"sources":["counter/redux.js","counter/CounterContainer.js","posts/components/PostListElement.js","posts/components/PostsList.js","posts/redux.js","posts/containers/Posts.js","users/components/UserListElement.js","users/components/UsersList.js","users/redux.js","users/containers/Users.js","ui/redux.js","ui/containers/Appbar.js","users/containers/ContactForm.js","rootReducer.js","rootSaga.js","App.js","index.js"],"names":["COUNTER_INC","COUNTER_DEC","COUNTER_RESET","INITIAL_STATE","count","connect","state","counterValue","counter","dispatch","addValue","type","Component","render","_this$props","this","props","react_default","a","createElement","className","onClick","PostListElement","post","id","title","PostsList","posts","map","components_PostListElement","key","isLoading","isError","fetchPosts","fetch","then","response","json","data","payload","fetchSucceded","slice","catch","error","[object Object]","args","super","fetchData","components_PostsList","UserListElement","user","name","UsersList","users","components_UserListElement","FETCH_USERS_REQUESTED","fetchFailed","fetchRequested","components_UsersList","TOGGLE_APPBAR","showAppBar","notifications","ui","toggleTopBar","console","log","ContactForm","handleSubmit","onSubmit","htmlFor","Field","component","reduxForm","form","rootReducer","combineReducers","action","Object","objectSpread2","formReducer","fetchUsers","usersWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","sent","put","t0","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","persistedReducer","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","run","App","React","values","react_redux_es","integration_react","loading","containers_Appbar","containers_Users","containers_Posts","counter_CounterContainer","containers_ContactForm","rootElement","document","getElementById","ReactDOM","StrictMode","App_App"],"mappings":"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","file":"static/js/main.1e3dda45.chunk.js","sourcesContent":["// Action:\n// {\n//   type: 'COUNTER_ADD',\n//   payload: 123\n// }\n\nconst COUNTER_INC = \"counter/COUNTER_INC\";\nconst COUNTER_DEC = \"counter/COUNTER_DEC\";\nconst COUNTER_RESET = \"counter/COUNTER_RESET\";\n\nexport function inc() {\n  return {\n    type: COUNTER_INC\n  };\n}\n\nexport function dec() {\n  return {\n    type: COUNTER_DEC\n  };\n}\n\nexport const reset = () => ({ type: COUNTER_RESET });\n\nconst INITIAL_STATE = {\n  count: 0\n};\n\nexport default function reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case COUNTER_INC:\n      return { ...state, count: state.count + 1 };\n    case COUNTER_DEC:\n      return { ...state, count: state.count - 1 };\n    case COUNTER_RESET:\n      return { ...state, count: 0 };\n    default:\n      return state;\n  }\n  // if (action.type === COUNTER_INC) {\n  //   return {...state, counter: state.counter + 1 }\n  //   // return Object.assign({}, { counter: state.counter + 1 });\n  // }\n  // return state;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { inc } from \"./redux\";\n\nclass CounterContainer extends Component {\n  render() {\n    const { counterValue, addValue } = this.props;\n    return (\n      <div className=\"container\">\n        <h2>Counter: {counterValue} </h2>\n        <button onClick={() => addValue()}>Add</button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    counterValue: state.counter.count\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addValue: () => dispatch(inc())\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CounterContainer);\n","import React from \"react\";\n\nfunction PostListElement({ post }) {\n  return (\n    <h3>\n      {post.id}. {post.title}\n    </h3>\n  );\n}\n\nexport default PostListElement;\n","import React from \"react\";\n\nimport PostListElement from \"./PostListElement\";\n\nfunction PostsList({ posts }) {\n  return (\n    <div>\n      {posts.map(post => (\n        <PostListElement key={post.id} post={post} />\n      ))}\n    </div>\n  );\n}\n\nexport default PostsList;\n","const FETCH_POSTS_REQUESTED = \"posts/FETCH_POSTS_REQUESTED\";\nconst FETCH_POSTS_SUCCEDED = \"posts/FETCH_POSTS_SUCCEDED\";\nconst FETCH_POSTS_FAILED = \"posts/FETCH_POSTS_FAILED\";\n\nconst INITIAL_STATE = {\n  posts: [],\n  isLoading: false,\n  isError: false\n};\n\nconst fetchRequested = () => ({ type: FETCH_POSTS_REQUESTED });\nconst fetchFailed = () => ({ type: FETCH_POSTS_FAILED });\nconst fetchSucceded = data => ({ type: FETCH_POSTS_SUCCEDED, payload: data });\n\nexport const fetchPosts = () => {\n  return function(dispatch) {\n    dispatch(fetchRequested());\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(data => {\n        dispatch(fetchSucceded(data.slice(0, 5)));\n      })\n      .catch(error => {\n        dispatch(fetchFailed());\n      });\n  };\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_POSTS_REQUESTED:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case FETCH_POSTS_SUCCEDED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        posts: action.payload\n      };\n    case FETCH_POSTS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport PostsList from \"../components/PostsList\";\nimport { fetchPosts } from \"../redux\";\n\nclass Posts extends Component {\n  fetchData = () => {\n    this.props.fetchPosts();\n  };\n  render() {\n    const { posts, isLoading } = this.props;\n    return (\n      <div className=\"container\">\n        <h2>Posts</h2>\n        {isLoading && <p>Loading...</p>}\n        <button onClick={this.fetchData}>Fetch Posts</button>\n        <PostsList posts={posts} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  isLoading: state.posts.isLoading,\n  isError: state.posts.isError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPosts: () => dispatch(fetchPosts())\n});\n// const mapDispatchToProps = {\n//   fetchPosts\n// };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Posts);\n","import React from \"react\";\n\nfunction UserListElement({ user }) {\n  return (\n    <h3>\n      {user.id} {user.name}\n    </h3>\n  );\n}\n\nexport default UserListElement;\n","import React from \"react\";\n\nimport UsersListElement from \"./UserListElement\";\n\nfunction UsersList({ users }) {\n  return (\n    <div>\n      {users.map(user => (\n        <UsersListElement key={user.id} user={user} />\n      ))}\n    </div>\n  );\n}\n\nexport default UsersList;\n","export const FETCH_USERS_REQUESTED = \"users/FETCH_USERS_REQUESTED\";\nexport const FETCH_USERS_SUCCEDED = \"users/FETCH_USERS_SUCCEDED\";\nexport const FETCH_USERS_FAILED = \"users/FETCH_USERS_FAILED\";\n\nconst INITIAL_STATE = {\n  users: [],\n  isLoading: false,\n  isError: false\n};\n\nexport const fetchRequested = () => ({ type: FETCH_USERS_REQUESTED });\nexport const fetchFailed = () => ({ type: FETCH_USERS_FAILED });\nexport const fetchSucceded = data => ({ type: FETCH_USERS_SUCCEDED, payload: data });\n\n// export const fetchUsers = () => {\n//   return function(dispatch) {\n//     dispatch(fetchRequested());\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(response => response.json())\n//       .then(data => {\n//         dispatch(fetchSucceded(data.slice(0, 5)));\n//       })\n//       .catch(error => {\n//         dispatch(fetchFailed());\n//       });\n//   };\n// };\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUESTED:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case FETCH_USERS_SUCCEDED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        users: action.payload\n      };\n    case FETCH_USERS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport UsersList from \"../components/UsersList\";\nimport { fetchRequested } from \"../redux\";\n\nclass Users extends Component {\n  fetchData = () => {\n    this.props.fetchRequested();\n  };\n  render() {\n    const { users, isLoading } = this.props;\n    return (\n      <div className=\"container\">\n        <h2>Users</h2>\n        {isLoading && <p>Loading...</p>}\n        <button onClick={this.fetchData}>Fetch Users</button>\n        <UsersList users={users} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.users.users,\n  isLoading: state.users.isLoading,\n  isError: state.users.isError\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchRequested: () => dispatch(fetchRequested())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Users);\n\n","const TOGGLE_APPBAR = \"ui/TOGGLE_APPBAR\";\n\nexport function toggleTopBar() {\n  return { type: TOGGLE_APPBAR };\n}\n\nconst INITIAL_STATE = {\n  showAppBar: true,\n  notifications: 0\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_APPBAR:\n      return {\n        ...state,\n        showAppBar: !state.showAppBar\n      };\n    default:\n      return state;\n  }\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { toggleTopBar } from \"../redux\";\n\nclass Appbar extends Component {\n  render() {\n    const { showAppBar, toggleTopBar } = this.props;\n    console.log(showAppBar);\n    return (\n      <div className=\"container\">\n        <div>\n          Show Appbar: {showAppBar ? 'Yes' : 'No'} <button onClick={toggleTopBar}>Toggle</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showAppBar: state.ui.showAppBar,\n  notifications: state.ui.notifications\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTopBar: () => dispatch(toggleTopBar())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Appbar);\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nlet ContactForm = props => {\n  const { handleSubmit } = props;\n  return (\n    <form onSubmit={handleSubmit} className=\"container\">\n      <div>\n        <label htmlFor=\"firstName\">First Name</label>\n        <Field name=\"firstName\" component=\"input\" type=\"text\" />\n      </div>\n      <div>\n        <label htmlFor=\"lastName\">Last Name</label>\n        <Field name=\"lastName\" component=\"input\" type=\"text\" />\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <Field name=\"email\" component=\"input\" type=\"email\" />\n      </div>\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nContactForm = reduxForm({\n  // a unique name for the form\n  form: 'contact'\n})(ContactForm)\n\nexport default ContactForm","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from 'redux-form'\n\nimport counterReducer from \"./counter/redux\";\nimport postsReducer from \"./posts/redux\";\nimport uiReducer from \"./ui/redux\";\nimport usersReducer from \"./users/redux\";\n\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  posts: postsReducer,\n  ui: uiReducer,\n  users: usersReducer,\n  form: formReducer\n});\n\nexport default rootReducer;\n","import { put, takeLatest, all } from 'redux-saga/effects';\n\nimport { fetchSucceded, fetchFailed } from './users/redux';\nimport { FETCH_USERS_REQUESTED } from './users/redux';\n\nfunction* fetchUsers(action) {\n  try {\n     const users = yield fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json());\n\n     yield put(fetchSucceded(users.slice(0, 5)));\n  } catch (e) {\n     yield put(fetchFailed());\n  }\n}\n\nfunction* usersWatcher() {\n  yield takeLatest(FETCH_USERS_REQUESTED, fetchUsers);\n}\n\nexport default function* rootSaga() {\n  yield all([\n    usersWatcher()\n  ]);\n}\n","import React from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from 'redux-saga';\nimport { Provider } from \"react-redux\";\n\nimport \"./styles.css\";\n\nimport CounterContainer from \"./counter/CounterContainer\";\nimport Posts from \"./posts/containers/Posts\";\nimport Users from \"./users/containers/Users\";\nimport Appbar from \"./ui/containers/Appbar\";\nimport ContactForm from './users/containers/ContactForm';\n\nimport rootReducer from \"./rootReducer\";\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['ui', 'counter']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = [thunk, sagaMiddleware];\nconst store = createStore(persistedReducer, /* preloadedState, */ composeEnhancers(\n  applyMiddleware(...middleware)\n));\n\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default class App extends React.Component {\n\n  handleSubmit = (values) => {\n    console.log('values: ', values);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <Appbar />\n            <Users />\n            <Posts />\n            <CounterContainer />\n            <ContactForm onSubmit={this.handleSubmit} />\n          </PersistGate>\n        </Provider>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}