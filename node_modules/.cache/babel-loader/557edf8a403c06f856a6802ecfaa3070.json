{"ast":null,"code":"import _objectSpread from \"/Users/video/Workspace/SzkolaReacta/redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport const FETCH_USERS_REQUESTED = \"users/FETCH_USERS_REQUESTED\";\nexport const FETCH_USERS_SUCCEDED = \"users/FETCH_USERS_SUCCEDED\";\nexport const FETCH_USERS_FAILED = \"users/FETCH_USERS_FAILED\";\nconst INITIAL_STATE = {\n  users: [],\n  isLoading: false,\n  isError: false\n};\nexport const fetchRequested = () => ({\n  type: FETCH_USERS_REQUESTED\n});\nexport const fetchFailed = () => ({\n  type: FETCH_USERS_FAILED\n});\nexport const fetchSucceded = data => ({\n  type: FETCH_USERS_SUCCEDED,\n  payload: data\n}); // export const fetchUsers = () => {\n//   return function(dispatch) {\n//     dispatch(fetchRequested());\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(response => response.json())\n//       .then(data => {\n//         dispatch(fetchSucceded(data.slice(0, 5)));\n//       })\n//       .catch(error => {\n//         dispatch(fetchFailed());\n//       });\n//   };\n// };\n\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUESTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: true,\n        isError: false\n      });\n\n    case FETCH_USERS_SUCCEDED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        isError: false,\n        users: action.payload\n      });\n\n    case FETCH_USERS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        isError: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/video/Workspace/SzkolaReacta/redux/src/users/redux.js"],"names":["FETCH_USERS_REQUESTED","FETCH_USERS_SUCCEDED","FETCH_USERS_FAILED","INITIAL_STATE","users","isLoading","isError","fetchRequested","type","fetchFailed","fetchSucceded","data","payload","state","action"],"mappings":";AAAA,OAAO,MAAMA,qBAAqB,GAAG,6BAA9B;AACP,OAAO,MAAMC,oBAAoB,GAAG,4BAA7B;AACP,OAAO,MAAMC,kBAAkB,GAAG,0BAA3B;AAEP,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,SAAS,EAAE,KAFS;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;AAMA,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAER;AAAR,CAAP,CAAvB;AACP,OAAO,MAAMS,WAAW,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAApB;AACP,OAAO,MAAMQ,aAAa,GAAGC,IAAI,KAAK;AAAEH,EAAAA,IAAI,EAAEP,oBAAR;AAA8BW,EAAAA,OAAO,EAAED;AAAvC,CAAL,CAA1B,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,CAACE,KAAK,GAAGV,aAAT,EAAwBW,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKR,qBAAL;AACE,6CACKa,KADL;AAEER,QAAAA,SAAS,EAAE,IAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,oBAAL;AACE,6CACKY,KADL;AAEER,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,OAAO,EAAE,KAHX;AAIEF,QAAAA,KAAK,EAAEU,MAAM,CAACF;AAJhB;;AAMF,SAAKV,kBAAL;AACE,6CACKW,KADL;AAEER,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF;AACE,aAAOO,KAAP;AArBJ;AAuBD,CAxBD","sourcesContent":["export const FETCH_USERS_REQUESTED = \"users/FETCH_USERS_REQUESTED\";\nexport const FETCH_USERS_SUCCEDED = \"users/FETCH_USERS_SUCCEDED\";\nexport const FETCH_USERS_FAILED = \"users/FETCH_USERS_FAILED\";\n\nconst INITIAL_STATE = {\n  users: [],\n  isLoading: false,\n  isError: false\n};\n\nexport const fetchRequested = () => ({ type: FETCH_USERS_REQUESTED });\nexport const fetchFailed = () => ({ type: FETCH_USERS_FAILED });\nexport const fetchSucceded = data => ({ type: FETCH_USERS_SUCCEDED, payload: data });\n\n// export const fetchUsers = () => {\n//   return function(dispatch) {\n//     dispatch(fetchRequested());\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then(response => response.json())\n//       .then(data => {\n//         dispatch(fetchSucceded(data.slice(0, 5)));\n//       })\n//       .catch(error => {\n//         dispatch(fetchFailed());\n//       });\n//   };\n// };\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUESTED:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case FETCH_USERS_SUCCEDED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        users: action.payload\n      };\n    case FETCH_USERS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}